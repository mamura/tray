services:
  mysql:
    image: mysql:8.4
    container_name: tray-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: app
      MYSQL_USER: app
      MYSQL_PASSWORD: secret
      TZ: America/Fortaleza
      MYSQL_INITDB_SKIP_TZINFO: "1"   # sÃ³ pra silenciar os avisos de timezone
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      # IMPORTANTE: use CMD-SHELL e escape a env com $$
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -p$${MYSQL_ROOT_PASSWORD} || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 20s
    networks: [backend]

  redis:
    image: redis:7-alpine
    container_name: tray-redis
    ports:
      - "6379:6379"   # opcional expor
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks: [backend]

  mailhog:
    image: mailhog/mailhog:latest
    container_name: tray-mailhog
    ports:
      - "8025:8025"   # UI
      - "1025:1025"   # SMTP
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8025"]
      interval: 5s
      timeout: 3s
      retries: 30
    networks: [backend]

  app:
    image: tray-php:dev
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: tray-php
    working_dir: /var/www
    volumes:
      - ./api:/var/www
    environment:
      TZ: America/Fortaleza
      APP_ENV: local
      APP_URL: http://localhost:8080
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: app
      DB_USERNAME: app
      DB_PASSWORD: secret
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MAIL_MAILER: smtp
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_FROM_ADDRESS: no-reply@example.test
      MAIL_FROM_NAME: "Sales App"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_started
    expose:
      - "9000"
    networks: [backend]

  queue:
    image: tray-php:dev
    container_name: tray-queue
    working_dir: /var/www
    command: >
      sh -lc 'php artisan queue:work redis
        --queue=default
        --sleep=1
        --tries=3
        --timeout=120
        --verbose'
    volumes:
      - ./api:/var/www
    depends_on:
      app:
        condition: service_started
      redis:
        condition: service_healthy
    networks: [backend]
    restart: unless-stopped

  scheduler:
    image: tray-php:dev
    container_name: tray-scheduler
    working_dir: /var/www
    command: sh -lc 'php artisan schedule:work --verbose'
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      app:
        condition: service_started
    volumes:
      - ./api:/var/www
    networks: [backend]

  nginx:
    image: nginx:1.27-alpine
    container_name: tray-nginx
    ports:
      - "8080:80"
    volumes:
      - ./api:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      app:
        condition: service_started
    networks: [backend]

  frontend:
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    container_name: tray-frontend
    working_dir: /usr/src/app
    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "5173:5173"
    environment:
      TZ: America/Fortaleza
      VITE_API_URL: /api
    depends_on:
      nginx:
        condition: service_started
    #command: sh -lc "npm i && npm run dev -- --host 0.0.0.0 --port 5173"
    networks: [backend]

volumes:
  mysql_data:

networks:
  backend:
    driver: bridge

